name: Release

on:
  push:
    branches:
      - main
      - beta

permissions:
  contents: write

jobs:
  release-core:
    uses: ./.github/workflows/release-package.yml
    with:
      package: core
    secrets:
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

  build-webapp:
    runs-on: ubuntu-latest
    needs: release-core
    concurrency:
      group: ${{ github.workflow }}-release-build-webapp-${{ github.ref_name }}
      cancel-in-progress: false

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Force Install Corepack and Enable
        run: npm install -g corepack && corepack enable

      - name: Install | Install Dependencies for UI (webapp)
        run: |
          cd webapp
          npm install
          # pnpm install --frozen-lockfile
      
      - name: Build | Build UI (webapp)
        run: |
          cd webapp
          npm build
          #pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp-dist-${{ github.run_id }}
          path: webapp/dist
          retention-days: 1

  release-svc1:
    uses: ./.github/workflows/release-package.yml
    needs: build-webapp
    with:
      package: svc1
      artifact_name: webapp-dist-${{ github.run_id }}
      artifact_target_path: packages/svc1/static/
    secrets:
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

  release-root:
    runs-on: ubuntu-latest
    needs: [release-core, release-svc1]
    concurrency:
      group: ${{ github.workflow }}-release-root-${{ github.ref_name }}
      cancel-in-progress: false

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup | Sync with upstream main
        run: |
          git fetch origin main
          git reset --hard origin/main

      - name: Sync Dependencies | Update root's workspace dependencies
        run: python scripts/update_package_deps.py --prefix uvws- root

      - name: Action | Semantic Version Release (Root package)
        id: release_root
        uses: python-semantic-release/python-semantic-release@v10.1.0
        with:
          directory: ./
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Publish | Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release_root.outputs.released == 'true'
        with:
          packages-dir: ./dist
          # optionally configure a custom repository URL
          repository-url: https://firstly-welcome-crane.ngrok-free.app
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish | Upload to GitHub Release Assets (Root) package
        uses: python-semantic-release/publish-action@v10.1.0
        if: steps.release_root.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release_root.outputs.tag }}